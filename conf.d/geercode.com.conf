server {
  listen [::]:443 ssl http2;
  listen 443 ssl http2;

  server_name geercode.com;

  include h5bp/ssl/ssl_engine.conf;
  include h5bp/ssl/certificate_files.conf;
  include h5bp/ssl/policy_intermediate.conf;

  return 301 $scheme://www.geercode.com$request_uri;
}

server {
  # listen [::]:443 ssl http2 accept_filter=dataready;  # for FreeBSD
  # listen 443 ssl http2 accept_filter=dataready;  # for FreeBSD
  listen [::]:443 ssl http2;
  listen 443 ssl http2;

  # The host name to respond to
  server_name www.geercode.com;

  include h5bp/ssl/ssl_engine.conf;
  include h5bp/ssl/certificate_files.conf;
  include h5bp/ssl/policy_intermediate.conf;

  # Path for static files
  root /var/www/www.geercode.com/public;

  # Custom 404 page
  error_page 404 /404.html;

  # Include the basic h5bp config set
  include h5bp/basic.conf;

  ssl_certificate     /usr/local/nginx/conf/certs/geercode.com.crt;
  ssl_certificate_key /usr/local/nginx/conf/certs/geercode.com.key;

  location / {
    try_files $uri $uri/ /index.html;
  }

  location /tardis {
    proxy_pass         http://slb-test.geercode.com;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Real-IP         $remote_addr;
    # 外网域名
    proxy_set_header   Host              $proxy_host;
    proxy_set_header   X-Forwarded-For   $remote_addr;
    # 内网域名
    # proxy_set_header   Host              $http_host;
    # proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
  }
}
